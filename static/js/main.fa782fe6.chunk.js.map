{"version":3,"sources":["contexts/global.tsx","constants/themes.ts","styles/GenericsStyled.tsx","layouts/NavbarStyled.tsx","layouts/Navbar.tsx","components/ButtonStyled.tsx","components/Button.tsx","components/ButtonTitleStyled.tsx","utils/useCups.ts","components/ButtonTitle.tsx","constants/cups.ts","components/InputStyled.tsx","components/Input.tsx","pages/Main.tsx","pages/App.tsx","index.tsx"],"names":["reducer","state","action","type","theme","changeTheme","changeCCUPS","initialState","ccups","tipo","distribuidora","otros","updated","Date","now","StateContext","createContext","StateProvider","children","Provider","value","useReducer","useGlobals","useContext","THEME","dark","background","onBackground","primary","light","ContainerStyled","styled","div","props","ContentStyled","NavbarStyled","IconTogglerStyled","right","left","IconToggler","icon","Navbar","dispatch","icons","checked","unchecked","onChange","href","target","rel","ButtonStyled","color","isChecked","text","values","findIndex","Button","React","useState","setChecked","useEffect","length","onClick","index","splice","push","calculateOptions","className","ccupsi","ButtonTitleStyled","h4","ButtonTitle","FIRST_DIGITS","Electricidad","Gas","CONTROL_DIGITS","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","dist","cups","getFirstDigits","i","Math","round","random","t_dist","Object","keys","filter","key","includes","floor","getMiddleDigits","toString","getEndChars","c_cups","substr","resto","parseInt","result","sort","useCups","setCups","setDistribuidora","setTipo","main","CupsDivStyled","afterText","PropertiesStyled","InputHiddenStyled","input","Input","setAfterText","inputRef","createRef","hiddenInputRef","dom_input","current","m_cups","innerHTML","slice","join","ref","dom_hidden","navigator","clipboard","writeText","copy","id","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa782fe6.chunk.js","sourcesContent":["import React, {createContext, ReactElement, useContext, useReducer} from \"react\";\r\n\r\nexport const reducer = (state: object, action: any): object | undefined => {\r\n    switch (action.type) {\r\n        case \"changeTheme\":\r\n            return {\r\n                ...state,\r\n                theme: action.changeTheme,\r\n            };\r\n        case \"changeCCUPS\":\r\n            return {\r\n                ...state,\r\n                changeCCUPS: action.changeCCUPS\r\n            };\r\n    }\r\n};\r\n\r\n/**\r\n * Initial app context, theme and cups generator properties\r\n */\r\nexport const initialState: any = {\r\n    theme: 'dark',\r\n    ccups: {\r\n        tipo: ['Electricidad'],\r\n        distribuidora: [\r\n            'Naturgy'\r\n        ],\r\n        otros: ['Canario'],\r\n    },\r\n    updated: Date.now(),\r\n};\r\n\r\n/**\r\n * @type {React.Context<any>}\r\n */\r\nexport const StateContext = createContext(initialState);\r\n\r\ninterface StateProviderProps {\r\n    reducer: any,\r\n    initialState: object,\r\n    children: ReactElement\r\n}\r\n\r\nexport const StateProvider: React.FC<StateProviderProps> = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useGlobals = () => useContext(StateContext);\r\n","/**\r\n * Theme object that contains all the styles for each type of theme\r\n * dark / light\r\n */\r\nexport const THEME : any = {\r\n    dark: {\r\n        background: \"#282c35\",\r\n        onBackground: \"#ffffff\",\r\n        primary: \"#efbb35\",\r\n    },\r\n    light: {\r\n        background: \"#ffffff\",\r\n        onBackground: \"#000000\",\r\n        primary: \"#b935ef\",\r\n    },\r\n};\r\n\r\nexport default THEME;\r\n","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n/**\r\n * Main container\r\n * Has all important and basic styles\r\n */\r\nexport const ContainerStyled = styled.div`\r\n    font-size: calc(10px + 2vmin);\r\n    background: ${props => THEME[props.theme.type].background};\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width: 1000px) {\r\n      padding: 0 25px;\r\n      align-items: unset;\r\n    }\r\n`;\r\n\r\n/**\r\n * Content container\r\n */\r\nexport const ContentStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;    \r\n  max-width: 900px;\r\n  \r\n  & h1 {\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n    &::after{\r\n        content: \" \";\r\n        border-bottom: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n        width: 50%;\r\n        height: 25px;\r\n        display: block;\r\n    }\r\n  }\r\n  \r\n  & .input {\r\n    width: 100%;\r\n    margin: 25px 0;\r\n    transform: skewY(6deg);\r\n    background: linear-gradient(transparent,rgb(53, 76, 239));\r\n    height: 60px;\r\n    & > div {\r\n      transform: skewY(-6deg);\r\n    }\r\n    & .cups-div {\r\n        width: 100%;\r\n        height: 36px;;\r\n        border: unset;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        background: ${props => THEME[props.theme.type].onBackground};\r\n        color: ${props => THEME[props.theme.type].background};\r\n        padding: unset;\r\n        font-size: 25px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        @media (max-width: 560px) {\r\n           font-size: 18px;\r\n        }\r\n    }\r\n    \r\n    & .tools {\r\n        display:flex;\r\n        justify-content: flex-end;\r\n        margin-top: -31px;\r\n    }\r\n  }\r\n  \r\n  & .desc {\r\n      & p {\r\n       border-left: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n       padding-left: 10px;\r\n       margin-top:25px;\r\n      }\r\n  }\r\n  \r\n  & .options{\r\n     display: flex;\r\n     width: 100%;\r\n     & > div {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        & button {\r\n          \r\n        }\r\n     }\r\n     & > div:not(:last-child){\r\n      margin-right: 3px;\r\n     }\r\n     @media (max-width: 560px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  \r\n  & strong {\r\n    color : ${props => THEME[props.theme.type].primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Row where input and description is\r\n */\r\nexport const RowInput = styled.div`\r\n  display:flex;\r\n  & .desc {\r\n    flex: 30%;\r\n  }\r\n  & .input {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport THEME from \"../constants/themes\";\r\n\r\nexport const NavbarStyled = styled.div`\r\n    margin-top:25px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row-reverse;\r\n    & a{\r\n      color: ${props => THEME[props.theme.type].onBackground};\r\n      font-size: 0.9rem;\r\n      text-decoration: none;\r\n      transition: .25s;\r\n      &:hover{\r\n        color: ${props => THEME[props.theme.type].primary};\r\n        letter-spacing: 1px;\r\n      }\r\n    }\r\n    & span {\r\n      padding: 0 10px\r\n    }\r\n`;\r\n\r\ninterface IconTogglerStyledProps {\r\n    left : boolean | undefined;\r\n    right  : boolean | undefined;\r\n}\r\n\r\nexport const IconTogglerStyled = styled.div<IconTogglerStyledProps>`\r\n    color: #ffffff;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    top: 0.3em;\r\n    ${props => props.right ? 'right: -5px' : null };\r\n    ${props => props.left ? 'left: -5px' : null };\r\n  \r\n`;","import React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport {IconTogglerStyled, NavbarStyled} from \"./NavbarStyled\";\r\nimport {useGlobals} from \"../contexts/global\";\r\n\r\ninterface IconTogglerProps {\r\n    icon: string;\r\n    left?: boolean;\r\n    right?: boolean;\r\n}\r\n\r\n/**\r\n * @param props\r\n * @constructor\r\n */\r\nconst IconToggler: React.FC<IconTogglerProps> = (props) => {\r\n    return (\r\n        <IconTogglerStyled left={props.left} right={props.right}>{props.icon}</IconTogglerStyled>\r\n    )\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Navbar: React.FC = () => {\r\n    const [{theme}, dispatch] = useGlobals();\r\n\r\n    const changeTheme = () => {\r\n        dispatch({\r\n            type: \"changeTheme\",\r\n            changeTheme: theme === \"dark\" ? \"light\" : \"dark\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <NavbarStyled>\r\n            <Toggle\r\n                icons={{\r\n                    checked: <IconToggler left icon=\"🌞\"/>,\r\n                    unchecked: <IconToggler right icon=\"🌛\"/>,\r\n                }}\r\n                onChange={changeTheme}/>\r\n            <span>─</span>\r\n            <a href=\"https://github.com/jvidalv/react-ts-cups-generator\" target=\"_blank\" rel=\"noopener noreferrer\">>> Github</a>\r\n        </NavbarStyled>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n    background: string,\r\n    checked: boolean,\r\n    color: string,\r\n}\r\n\r\nexport const ButtonStyled = styled.div<ButtonProps>`\r\n   display: flex;\r\n   margin-bottom: 3px;\r\n   font-size: 1.1rem;\r\n   user-select: none;\r\n   & > div:first-child, > div:last-child{\r\n     width: 25px;\r\n     background: #4D4D4D;\r\n     position:relative;\r\n     transition: .50s;\r\n     &::after{\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 25px;\r\n        text-align: center;\r\n        line-height: 32px;\r\n        opacity: 1;\r\n     }\r\n     &:not(.checked){\r\n      width: 0;\r\n      &::after{\r\n        content: \"\";\r\n        opacity: 0;\r\n      }\r\n     }\r\n   }\r\n   & > div:first-child {\r\n     &::after{\r\n        transition: .75s;\r\n        content: \"✔\";\r\n        color: greenyellow;\r\n     }\r\n   }\r\n   & > div:last-child {\r\n     &::after{\r\n        transition: 1.5s;\r\n        content: \"❌\";\r\n     }\r\n   }\r\n   }\r\n   & .button {\r\n    flex-grow: 1;\r\n    color: ${props => props.color};\r\n    background: ${props => props.background};\r\n    border-color: ${props => props.background};\r\n    padding: 5px 5px;\r\n    transition: .25s;\r\n    cursor : pointer;\r\n    text-align: left;\r\n   }\r\n   \r\n`;\r\n","import React from \"react\";\r\nimport {ButtonStyled} from \"./ButtonStyled\";\r\nimport {useGlobals} from \"../contexts/global\";\r\n\r\ninterface ButtonProps {\r\n    text: string,\r\n    background: string,\r\n    color: string,\r\n    type: string,\r\n}\r\n\r\n/**\r\n * In out distribuidoras\r\n * @param text\r\n * @param values\r\n */\r\nconst calculateOptions = (text: string, values: Array<string>) => {\r\n    const index = values.findIndex((value: string) => value === text);\r\n    if (index !== -1) {\r\n        values.splice(index, 1)\r\n    } else {\r\n        values.push(text)\r\n    }\r\n    return values;\r\n};\r\n/**\r\n * Checks if option is on or off\r\n * @param text\r\n * @param values\r\n */\r\nconst isChecked = (text: string, values: Array<string>) => {\r\n    return values.findIndex((value: string) => value === text) !== -1;\r\n};\r\n\r\n\r\n/**\r\n * @param text\r\n * @param background\r\n * @param color\r\n * @param type\r\n * @constructor\r\n */\r\nconst Button: React.FC<ButtonProps> = ({text, background, color, type}) => {\r\n    const [{ccups}, dispatch] = useGlobals();\r\n    const [checked, setChecked] = React.useState(isChecked(text, ccups[type]));\r\n    const changeChecked = () => {\r\n        ccups[type] = calculateOptions(text, ccups[type]);\r\n        dispatch({\r\n            type: \"changeCCUPS\",\r\n            changeCCUPS: {...ccups}\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setChecked(isChecked(text, ccups[type]));\r\n    }, [ccups, ccups.tipo.length, ccups.distribuidora.length, ccups.otros.length]);\r\n\r\n    return (\r\n        <ButtonStyled background={background} color={color} checked={checked} onClick={() => changeChecked()}>\r\n            <div className={checked ? \"checked\" : \" \"}/>\r\n            <div className=\"button\">\r\n                {text}\r\n            </div>\r\n            <div className={checked ? \" \" : \"checked\"}/>\r\n        </ButtonStyled>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n// theme is now fully typed\r\nexport const ButtonTitleStyled = styled.h4`\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    margin: 10px 0;\r\n    & span {\r\n      margin-right: 5px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {useGlobals} from \"../contexts/global\";\r\nimport {CONTROL_DIGITS, FIRST_DIGITS} from \"../constants/cups\";\r\n\r\n/**\r\n * Used variables\r\n */\r\nlet ccupsi: any;\r\nlet dist = \"\";\r\nlet tipo = \"\";\r\nlet cups = \"ES0318363477145938GE\";\r\n\r\n/**\r\n * Main of cups generation flow, takes care of call al methods and sets all the props\r\n * @param ccups\r\n * @param setCups\r\n * @param setTipo\r\n * @param setDistribuidora\r\n */\r\nfunction main(ccups: object, setCups: any, setTipo: any, setDistribuidora: any) {\r\n    ccupsi = ccups;\r\n\r\n    getFirstDigits();\r\n    cups && getMiddleDigits();\r\n    cups && getEndChars();\r\n\r\n    setDistribuidora(cups ? dist : \"🙄\");\r\n    setTipo(cups ? tipo : \"👺\");\r\n\r\n    cups = cups ? cups : \"💥\";\r\n\r\n    setCups(cups)\r\n}\r\n\r\n/**\r\n * Sets first 6 digits of a CUPS based on options selected\r\n * It is a recursive and amazing function thought by the brightest brain of my 600 hundred population village\r\n */\r\nconst getFirstDigits = (i: number = 0): string | undefined => {\r\n    tipo = ccupsi.tipo[ccupsi.tipo.length > 1 ? Math.round(Math.random()) : 0];\r\n    if (tipo) {\r\n        let t_dist = Object.keys(FIRST_DIGITS[tipo]).filter((key: string) => ccupsi.distribuidora.includes(key));\r\n        if (!t_dist.length && ccupsi.distribuidora.length && i < 5) {\r\n            i++;\r\n            return getFirstDigits(i);\r\n        }\r\n        dist = t_dist[t_dist.length > 1 ? Math.floor(Math.random() * t_dist.length) : 0];\r\n    }\r\n\r\n    cups = tipo && dist ? FIRST_DIGITS[tipo][dist][Math.floor(Math.random() * FIRST_DIGITS[tipo][dist].length)] : \"\"\r\n};\r\n\r\n/**\r\n * Sets middle digits, 12 length\r\n */\r\nconst getMiddleDigits = () => {\r\n    const max = 999999999999, min = 100000000000;\r\n\r\n    cups = cups + (Math.floor(Math.random() * (max - min)) + min).toString();\r\n};\r\n\r\n/**\r\n * Calculates control chars\r\n */\r\nconst getEndChars = () => {\r\n    const c_cups = cups.substr(2);\r\n    let resto = parseInt(c_cups) % 529;\r\n    let c = resto % 23;\r\n    let r = Math.floor(resto / 23);\r\n    let result = [c, r].sort();\r\n\r\n    cups = cups + CONTROL_DIGITS[result[0]] + CONTROL_DIGITS[result[1]];\r\n};\r\n\r\n/**\r\n * Main hook that calculates and returns a random cups based on parameters from global context\r\n * It also returns the random type and distribuidora choosen during the calculations\r\n */\r\nexport const useCups = (): any => {\r\n    const [{ccups}] = useGlobals();\r\n    const [cups, setCups] = React.useState(\"\");\r\n    const [distribuidora, setDistribuidora] = React.useState(\"\");\r\n    const [tipo, setTipo] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        main(ccups, setCups, setTipo, setDistribuidora);\r\n    }, [ccups, ccups.tipo.length, ccups.distribuidora.length, ccups.otros.length]);\r\n\r\n    return {cups, distribuidora, tipo};\r\n};\r\n","import React from \"react\";\r\nimport {ButtonTitleStyled} from \"./ButtonTitleStyled\";\r\n\r\ninterface ButtonTitleProps {\r\n    text : string,\r\n    icon : string,\r\n}\r\n\r\nconst ButtonTitle: React.FC<ButtonTitleProps> = ({text, icon}) => {\r\n    return (\r\n        <ButtonTitleStyled>\r\n            <span>{icon}</span>\r\n            {text}\r\n        </ButtonTitleStyled>\r\n    );\r\n};\r\n\r\nexport default ButtonTitle;","\r\nexport const FIRST_DIGITS: any = {\r\n    Electricidad: {\r\n        'Endesa': ['ES0023', 'ES0024', 'ES0029', 'ES0288', 'ES0363', 'ES0396'],\r\n        'Iberdrola': ['ES0021'],\r\n        'Naturgy': ['ES0022', 'ES0390', 'ES0397'],\r\n        'E-Redes': ['ES0026'],\r\n    },\r\n    Gas: {\r\n        'Naturgy': ['ES0230', 'ES0203', 'ES0218', 'ES0220', 'ES0221', 'ES0222', 'ES0223',\r\n            'ES0224', 'ES0226', 'ES0227'],\r\n        'Redexis': ['ES0208', 'ES0225', 'ES0205', 'ES0206'],\r\n        'Nortegas': ['ES0229', 'ES0201', 'ES0229', 'ES0211'],\r\n        'RDG': ['ES0234', 'ES0228'],\r\n    }\r\n};\r\nexport const CONTROL_DIGITS: any = {\r\n    0: \"T\",\r\n    1: \"R\",\r\n    2: \"W\",\r\n    3: \"A\",\r\n    4: \"G\",\r\n    5: \"M\",\r\n    6: \"Y\",\r\n    7: \"F\",\r\n    8: \"P\",\r\n    9: \"D\",\r\n    10: \"X\",\r\n    11: \"B\",\r\n    12: \"N\",\r\n    13: \"J\",\r\n    14: \"Z\",\r\n    15: \"S\",\r\n    16: \"Q\",\r\n    17: \"V\",\r\n    18: \"H\",\r\n    19: \"L\",\r\n    20: \"C\",\r\n    21: \"K\",\r\n    22: \"E\",\r\n};","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\ninterface InputProps {\r\n    ref : any,\r\n    className ?: string,\r\n    afterText : string,\r\n}\r\n\r\ninterface InputHiddenProps {\r\n    ref : any,\r\n    className ?: string,\r\n    value ?: string,\r\n}\r\n\r\nexport const CupsDivStyled = styled.div<InputProps>`\r\n   letter-spacing: 0.05em;\r\n   position:relative;\r\n   & .space { \r\n    padding: 0 5px;\r\n   }\r\n   &::after{\r\n    content : \"${ props => props.afterText }\";\r\n    position: absolute;\r\n    right: 10px;\r\n    font-size: 12px;\r\n    font-style: italic;\r\n    color: ${props => THEME[props.theme.type].background};\r\n    @media (max-width: 560px) {\r\n       color: white !important;\r\n       font-size: 8px;\r\n       top: 45px;\r\n    }\r\n   }\r\n`;\r\n\r\nexport const PropertiesStyled = styled.div`\r\n  position: absolute;\r\n  margin-top: -30px;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  z-index: -1;\r\n  & > div {\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const InputHiddenStyled = styled.input<InputHiddenProps>`\r\n  display: none;\r\n`;\r\n","import React from \"react\";\r\nimport {useCups} from \"../utils/useCups\";\r\nimport {CupsDivStyled, InputHiddenStyled, PropertiesStyled} from \"./InputStyled\";\r\n\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Input: React.FC = () => {\r\n    const {cups, distribuidora, tipo} = useCups();\r\n    const [afterText, setAfterText] = React.useState(\"Click para copiar\");\r\n    const inputRef = React.createRef();\r\n    const hiddenInputRef = React.createRef();\r\n\r\n    const copy = () => {\r\n        const dom_hidden : any = hiddenInputRef.current;\r\n        navigator.clipboard.writeText(dom_hidden.value);\r\n        setAfterText(\"Copiado!\")\r\n    };\r\n\r\n    // Separates the string with spans\r\n    React.useEffect(() => {\r\n        const dom_input : any = inputRef.current;\r\n        let m_cups = cups;\r\n        dom_input.innerHTML = cups.length > 5 ? [ `<span class=\"space\">${m_cups.slice(0, 5)}</span>`, `<span class=\"space\">${m_cups.slice(5, 18)}</span>`, `<span class=\"space\">${m_cups.slice(18)}</span>`].join('') : cups;\r\n        setAfterText(\"Click para copiar\")\r\n    }, [cups]);\r\n\r\n    return (\r\n        <>\r\n            <PropertiesStyled>\r\n                <div>\r\n                    {tipo} ─ {distribuidora}\r\n                </div>\r\n            </PropertiesStyled>\r\n            <CupsDivStyled className=\"cups-div\" ref={inputRef} onClick={() => copy()} afterText={afterText}>\r\n                {cups}\r\n            </CupsDivStyled>\r\n            <InputHiddenStyled ref={hiddenInputRef} id=\"hidden-cups\" value={cups}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport {useGlobals} from \"../contexts/global\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {ContainerStyled, ContentStyled} from \"../styles/GenericsStyled\";\r\nimport Navbar from \"../layouts/Navbar\";\r\nimport Button from \"../components/Button\";\r\nimport ButtonTitle from \"../components/ButtonTitle\";\r\nimport Tool from \"../components/Tool\";\r\nimport Input from \"../components/Input\";\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Main: React.FC = () => {\r\n    const [{theme}] = useGlobals();\r\n    return (\r\n        <ThemeProvider theme={{type: theme}}>\r\n            <ContainerStyled>\r\n                <ContentStyled>\r\n                    <Navbar/>\r\n                    <h1>\r\n                        Código Universal del Punto de Suministro\r\n                    </h1>\r\n                    <div className=\"input\">\r\n                        <div>\r\n                            {/*<div className=\"tools\">*/}\r\n                            {/*    <Tool icon=\"👥\" text=\"COPIAR\" background=\"orange\"/>*/}\r\n                            {/*    <Tool icon=\"♻\" text=\"GENERAR\" background=\"chocolate\"/>*/}\r\n                            {/*</div>*/}\r\n                            <Input/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Tipo\" icon=\"⚡\"/>\r\n                            <Button type=\"tipo\" text=\"Electricidad\" background=\"yellow\" color=\"black\"/>\r\n                            <Button type=\"tipo\" text=\"Gas\" background=\"purple\" color=\"white\"/>\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Distribuidora\" icon=\"🏭\"/>\r\n                            <Button type=\"distribuidora\" text=\"Endesa\" background=\"cadetblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Iberdrola\" background=\"cornflowerblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Naturgy\" background=\"darkslateblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"E-Redes\" background=\"mediumslateblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Redexis\" background=\"dodgerblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Nortegas\" background=\"midnightblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"RDG\" background=\"royalblue\" color=\"white\"/>\r\n\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Otros\" icon=\"🌴\"/>\r\n                            <Button type=\"otros\" text=\"Canario\" background=\"aqua\" color=\"black\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <p>\r\n                            El número CUPS es el <strong>código alfanumérico que identifica cada casa o\r\n                            negocio</strong>, tanto para la red de electricidad como de la red de gas natural.\r\n                        </p>\r\n                    </div>\r\n                </ContentStyled>\r\n            </ContainerStyled>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {initialState, reducer, StateProvider} from \"../contexts/global\";\r\nimport Main from \"./Main\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <StateProvider initialState={initialState} reducer={reducer}>\r\n            <Main/>\r\n        </StateProvider>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport \"./styles/#generic.css\";\nimport \"./styles/rt.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}