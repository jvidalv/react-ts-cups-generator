{"version":3,"sources":["constants/themes.ts","styles/GenericsStyled.tsx","layouts/NavbarStyled.tsx","layouts/Navbar.tsx","components/ButtonStyled.tsx","components/Button.tsx","components/ButtonTitleStyled.tsx","components/ButtonTitle.tsx","components/ToolStyled.tsx","components/Tool.tsx","pages/Main.tsx","index.tsx"],"names":["THEME","dark","background","onBackground","primary","light","ContainerStyled","styled","div","props","theme","type","ContentStyled","NavbarStyled","IconTogglerStyled","right","left","IconToggler","icon","Navbar","icons","checked","unchecked","onChange","useTheme","ButtonStyled","color","Button","text","React","useState","setChecked","onClick","className","ButtonTitleStyled","h4","ButtonTitle","ToolStyled","Tool","Main","readOnly","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d682e2d.chunk.js","sourcesContent":["/**\r\n * Theme object that contains all the styles for each type of theme\r\n * dark / light\r\n */\r\nexport const THEME : any = {\r\n    dark: {\r\n        background: \"#282c35\",\r\n        onBackground: \"#ffffff\",\r\n        primary: \"#efbb35\",\r\n    },\r\n    light: {\r\n        background: \"#ffffff\",\r\n        onBackground: \"#000000\",\r\n        primary: \"#efbb35\",\r\n\r\n    },\r\n};\r\n\r\nexport default THEME;\r\n","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n/**\r\n * Main container\r\n * Has all important and basic styles\r\n */\r\nexport const ContainerStyled = styled.div`\r\n    font-size: calc(10px + 2vmin);\r\n    background: ${props => THEME[props.theme.type].background};\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width: 1000px) {\r\n      padding: 0 25px;\r\n      align-items: unset;\r\n    }\r\n`;\r\n\r\n/**\r\n * Content container\r\n */\r\nexport const ContentStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;    \r\n  max-width: 900px;\r\n  & h1 {\r\n    margin-top:50px;\r\n    margin-bottom: 50px;\r\n    &::after{\r\n        content: \" \";\r\n        border-bottom: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n        width: 50%;\r\n        height: 25px;\r\n        display: block;\r\n    }\r\n  }\r\n  \r\n  & .input {\r\n    width: 100%;\r\n    margin: 25px 0;\r\n    transform: skewY(6deg);\r\n    background: linear-gradient(transparent,rgb(53, 76, 239));\r\n    height: 45px;\r\n    & > div {\r\n      transform: skewY(-6deg);\r\n    }\r\n    & input {\r\n        width: 100%;\r\n        height: 30px;\r\n        border: unset;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        background: ${props => THEME[props.theme.type].onBackground};\r\n        color: ${props => THEME[props.theme.type].background};\r\n        margin-top: 3px;\r\n        padding: unset;\r\n        font-size: 20px;\r\n    }\r\n    \r\n    & .tools {\r\n        display:flex;\r\n        justify-content: flex-end;\r\n        margin-top: -31px;\r\n    }\r\n  }\r\n  \r\n  & .desc {\r\n      & p {\r\n       border-left: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n       padding-left: 10px;\r\n       margin-top:25px;\r\n      }\r\n  }\r\n  \r\n  & .options{\r\n     display: flex;\r\n     width: 100%;\r\n     & > div {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        & button {\r\n          \r\n        }\r\n     }\r\n     & > div:not(:last-child){\r\n      margin-right: 3px;\r\n     }\r\n     @media (max-width: 560px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  \r\n  & strong {\r\n    color : ${props => THEME[props.theme.type].primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Row where input and description is\r\n */\r\nexport const RowInput = styled.div`\r\n  display:flex;\r\n  & .desc {\r\n    flex: 30%;\r\n  }\r\n  & .input {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavbarStyled = styled.div`\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    display: flex;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\ninterface IconTogglerStyledProps {\r\n    left : boolean | undefined;\r\n    right  : boolean | undefined;\r\n}\r\n\r\nexport const IconTogglerStyled = styled.div<IconTogglerStyledProps>`\r\n    color: #ffffff;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    top: 0.3em;\r\n    ${props => props.right ? 'right: -5px' : null };\r\n    ${props => props.left ? 'left: -5px' : null };\r\n`;","import React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport {IconTogglerStyled, NavbarStyled} from \"./NavbarStyled\";\r\n\r\ninterface IconTogglerProps {\r\n    icon: string;\r\n    left?:  boolean;\r\n    right?: boolean;\r\n}\r\n\r\n/**\r\n * @param props\r\n * @constructor\r\n */\r\nconst IconToggler: React.FC<IconTogglerProps> = (props) => {\r\n    return (\r\n        <IconTogglerStyled left={props.left} right={props.right}>{props.icon}</IconTogglerStyled>\r\n    )\r\n};\r\n\r\ninterface NavbarProps {\r\n    theme: string;\r\n    useTheme: any;\r\n}\r\n\r\n/**\r\n * @param props\r\n * @constructor\r\n */\r\nconst Navbar: React.FC<NavbarProps> = (props) => {\r\n    const changeTheme = () => {\r\n        props.useTheme(props.theme === 'dark' ? 'light' : 'dark')\r\n    };\r\n    return (\r\n        <NavbarStyled>\r\n                <Toggle\r\n                    icons={{\r\n                        checked: <IconToggler left icon=\"🌞\"/>,\r\n                        unchecked: <IconToggler right icon=\"🌛\"/>,\r\n                    }}\r\n                    onChange={changeTheme}/>\r\n        </NavbarStyled>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n    background: string,\r\n    checked: boolean,\r\n    color: string,\r\n}\r\n\r\nexport const ButtonStyled = styled.div<ButtonProps>`\r\n   display: flex;\r\n   margin-bottom: 3px;\r\n   font-size: 1.1rem;\r\n   \r\n   & > div:first-child, > div:last-child{\r\n     width: 25px;\r\n     background: #4D4D4D;\r\n     position:relative;\r\n     transition: .50s;\r\n     &::after{\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 25px;\r\n        text-align: center;\r\n        line-height: 32px;\r\n        opacity: 1;\r\n     }\r\n     &:not(.checked){\r\n      width: 0;\r\n      &::after{\r\n        content: \"\";\r\n        opacity: 0;\r\n      }\r\n     }\r\n   }\r\n   & > div:first-child {\r\n     &::after{\r\n        transition: .75s;\r\n        content: \"✔\";\r\n        color: greenyellow;\r\n     }\r\n   }\r\n   & > div:last-child {\r\n     &::after{\r\n        transition: 1.5s;\r\n        content: \"❌\";\r\n     }\r\n   }\r\n   }\r\n   & .button {\r\n    flex-grow: 1;\r\n    color: ${props => props.color};\r\n    background: ${props => props.background};\r\n    border-color: ${props => props.background};\r\n    padding: 5px 5px;\r\n    transition: .25s;\r\n    cursor : pointer;\r\n    text-align: left;\r\n   }\r\n   \r\n`;\r\n","import React from \"react\";\r\nimport {ButtonStyled} from \"./ButtonStyled\";\r\n\r\ninterface ButtonProps {\r\n    text : string,\r\n    background : string,\r\n    color : string\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({text, background, color}) => {\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n    const changeChecked = () => {\r\n        setChecked(!checked);\r\n    };\r\n\r\n    return (\r\n        <ButtonStyled background={background} color={color} checked={checked} onClick={() => changeChecked()}>\r\n            <div className={checked ? \"checked\" : \" \"} />\r\n            <div className=\"button\">\r\n                {text}\r\n            </div>\r\n            <div className={checked ? \" \" : \"checked\"} />\r\n        </ButtonStyled>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n// theme is now fully typed\r\nexport const ButtonTitleStyled = styled.h4`\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    margin: 10px 0;\r\n    & span {\r\n      margin-right: 5px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {ButtonTitleStyled} from \"./ButtonTitleStyled\";\r\n\r\ninterface ButtonTitleProps {\r\n    text : string,\r\n    icon : string,\r\n}\r\n\r\nconst ButtonTitle: React.FC<ButtonTitleProps> = ({text, icon}) => {\r\n    return (\r\n        <ButtonTitleStyled>\r\n            <span>{icon}</span>\r\n            {text}\r\n        </ButtonTitleStyled>\r\n    );\r\n};\r\n\r\nexport default ButtonTitle;","import styled from 'styled-components';\r\n\r\ninterface ToolProps {\r\n    background : string,\r\n}\r\n\r\nexport const ToolStyled = styled.div<ToolProps>`\r\n    background: ${props => props.background};\r\n    height: 35px;\r\n    width: 35px;\r\n    font-size: 17px;\r\n    text-align: center;\r\n    line-height: 35px;\r\n    &:not(:last-child){\r\n      margin-right: 3px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {ToolStyled} from \"./ToolStyled\";\r\n\r\ninterface ToolProps {\r\n    text: string,\r\n    background: string,\r\n}\r\n\r\nconst Tool: React.FC<ToolProps> = ({text, background}) => {\r\n\r\n    return (\r\n        <ToolStyled background={background}>\r\n            {text}\r\n        </ToolStyled>\r\n    );\r\n};\r\n\r\nexport default Tool;","import React from 'react';\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {ContainerStyled, ContentStyled, RowInput} from \"../styles/GenericsStyled\";\r\nimport Navbar from \"../layouts/Navbar\";\r\nimport Button from \"../components/Button\";\r\nimport ButtonTitle from \"../components/ButtonTitle\";\r\nimport Tool from \"../components/Tool\";\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Main: React.FC = () => {\r\n    const [theme, useTheme] = React.useState<string>('dark');\r\n    return (\r\n        <ThemeProvider theme={{type : theme}}>\r\n            <ContainerStyled>\r\n                <Navbar theme={theme} useTheme={useTheme}/>\r\n                <ContentStyled>\r\n                    <h1>\r\n                        Código Universal del Punto de Suministro\r\n                    </h1>\r\n                    <div className=\"input\">\r\n                        <div>\r\n                            <div className=\"tools\">\r\n                                <Tool text=\"👥\" background=\"orange\" />\r\n                                <Tool text=\"♻\" background=\"yellowgreen\" />\r\n                            </div>\r\n                            <input readOnly={true} value=\"ES0318363477145938GE\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Tipo\" icon=\"⚡\" />\r\n                            <Button text=\"Electricidad\" background=\"yellow\" color=\"black\" />\r\n                            <Button text=\"Gas\" background=\"purple\" color=\"white\" />\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Distribuïdora\" icon=\"🏭\" />\r\n                            <Button text=\"Endesa\" background=\"cadetblue\" color=\"white\" />\r\n                            <Button text=\"Iberdrola\" background=\"cornflowerblue\" color=\"white\" />\r\n                            <Button text=\"Naturgy\" background=\"darkslateblue\" color=\"white\" />\r\n                            <Button text=\"E-Redes\" background=\"mediumslateblue\" color=\"white\" />\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Otros\" icon=\"🌴\" />\r\n                            <Button text=\"Canario\" background=\"aqua\" color=\"black\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <p>\r\n                            El número CUPS es el <strong>código alfanumérico que identifica cada casa o negocio</strong>, tanto para la red de electricidad como de la red de gas natural.\r\n                        </p>\r\n                    </div>\r\n                </ContentStyled>\r\n            </ContainerStyled>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main';\nimport \"./styles/#generic.css\";\nimport \"./styles/rt.css\";\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}