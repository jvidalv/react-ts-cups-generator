{"version":3,"sources":["contexts/global.tsx","constants/themes.ts","styles/GenericsStyled.tsx","layouts/NavbarStyled.tsx","layouts/Navbar.tsx","components/ButtonStyled.tsx","components/Button.tsx","components/ButtonTitleStyled.tsx","components/ButtonTitle.tsx","components/ToolStyled.tsx","components/Tool.tsx","pages/Main.tsx","pages/App.tsx","index.tsx"],"names":["reducer","state","action","type","theme","changeTheme","changeCCUPS","changeTipo","initialState","ccups","tipo","distribuidoras","otros","canario","StateContext","createContext","StateProvider","children","Provider","value","useReducer","useGlobals","useContext","THEME","dark","background","onBackground","primary","light","ContainerStyled","styled","div","props","ContentStyled","NavbarStyled","IconTogglerStyled","right","left","IconToggler","icon","Navbar","dispatch","icons","checked","unchecked","onChange","href","target","rel","ButtonStyled","color","calculateTipo","text","Button","React","useState","setChecked","onClick","changeChecked","className","ButtonTitleStyled","h4","ButtonTitle","ToolStyled","Tool","hover","setHover","onMouseEnter","onMouseLeave","Main","readOnly","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75069c24.chunk.js","sourcesContent":["import React, {createContext, ReactElement, useContext, useReducer} from \"react\";\r\n\r\nexport const reducer = (state : object, action : any)  : object|undefined => {\r\n    switch (action.type) {\r\n        case \"changeTheme\":\r\n            return {\r\n                ...state,\r\n                theme: action.changeTheme,\r\n            };\r\n        case \"changeCCUPS\":\r\n            return {\r\n                ...state,\r\n                changeCCUPS: action.changeTipo\r\n            };\r\n    }\r\n};\r\n\r\n/**\r\n * Initial app context, theme and cups generator properties\r\n */\r\nexport const initialState : any = {\r\n    theme: 'dark',\r\n    ccups: {\r\n        tipo: 'any',\r\n        distribuidoras: [\r\n            'endesa', 'iberdrola', 'naturgy', 'e-redes'\r\n        ],\r\n        otros: {\r\n            canario: 1\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @type {React.Context<any>}\r\n */\r\nexport const StateContext = createContext(initialState);\r\n\r\ninterface StateProviderProps {\r\n    reducer: any,\r\n    initialState: object,\r\n    children: ReactElement\r\n}\r\n\r\nexport const StateProvider: React.FC<StateProviderProps> = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useGlobals = () => useContext(StateContext);\r\n","/**\r\n * Theme object that contains all the styles for each type of theme\r\n * dark / light\r\n */\r\nexport const THEME : any = {\r\n    dark: {\r\n        background: \"#282c35\",\r\n        onBackground: \"#ffffff\",\r\n        primary: \"#efbb35\",\r\n    },\r\n    light: {\r\n        background: \"#ffffff\",\r\n        onBackground: \"#000000\",\r\n        primary: \"#b935ef\",\r\n    },\r\n};\r\n\r\nexport default THEME;\r\n","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n/**\r\n * Main container\r\n * Has all important and basic styles\r\n */\r\nexport const ContainerStyled = styled.div`\r\n    font-size: calc(10px + 2vmin);\r\n    background: ${props => THEME[props.theme.type].background};\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width: 1000px) {\r\n      padding: 0 25px;\r\n      align-items: unset;\r\n    }\r\n`;\r\n\r\n/**\r\n * Content container\r\n */\r\nexport const ContentStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;    \r\n  max-width: 900px;\r\n  \r\n  & h1 {\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n    &::after{\r\n        content: \" \";\r\n        border-bottom: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n        width: 50%;\r\n        height: 25px;\r\n        display: block;\r\n    }\r\n  }\r\n  \r\n  & .input {\r\n    width: 100%;\r\n    margin: 25px 0;\r\n    transform: skewY(6deg);\r\n    background: linear-gradient(transparent,rgb(53, 76, 239));\r\n    height: 45px;\r\n    & > div {\r\n      transform: skewY(-6deg);\r\n    }\r\n    & input {\r\n        width: 100%;\r\n        height: 30px;\r\n        border: unset;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        background: ${props => THEME[props.theme.type].onBackground};\r\n        color: ${props => THEME[props.theme.type].background};\r\n        margin-top: 3px;\r\n        padding: unset;\r\n        font-size: 20px;\r\n    }\r\n    \r\n    & .tools {\r\n        display:flex;\r\n        justify-content: flex-end;\r\n        margin-top: -31px;\r\n    }\r\n  }\r\n  \r\n  & .desc {\r\n      & p {\r\n       border-left: 5px solid ${props => THEME[props.theme.type].onBackground};\r\n       padding-left: 10px;\r\n       margin-top:25px;\r\n      }\r\n  }\r\n  \r\n  & .options{\r\n     display: flex;\r\n     width: 100%;\r\n     & > div {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        & button {\r\n          \r\n        }\r\n     }\r\n     & > div:not(:last-child){\r\n      margin-right: 3px;\r\n     }\r\n     @media (max-width: 560px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  \r\n  & strong {\r\n    color : ${props => THEME[props.theme.type].primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Row where input and description is\r\n */\r\nexport const RowInput = styled.div`\r\n  display:flex;\r\n  & .desc {\r\n    flex: 30%;\r\n  }\r\n  & .input {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport THEME from \"../constants/themes\";\r\n\r\nexport const NavbarStyled = styled.div`\r\n    margin-top:25px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row-reverse;\r\n    & a{\r\n      color: ${props => THEME[props.theme.type].onBackground};\r\n      font-size: 0.9rem;\r\n      text-decoration: none;\r\n      transition: .25s;\r\n      &:hover{\r\n        color: ${props => THEME[props.theme.type].primary};\r\n        letter-spacing: 1px;\r\n      }\r\n    }\r\n    & span {\r\n      padding: 0 10px\r\n    }\r\n`;\r\n\r\ninterface IconTogglerStyledProps {\r\n    left : boolean | undefined;\r\n    right  : boolean | undefined;\r\n}\r\n\r\nexport const IconTogglerStyled = styled.div<IconTogglerStyledProps>`\r\n    color: #ffffff;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    top: 0.3em;\r\n    ${props => props.right ? 'right: -5px' : null };\r\n    ${props => props.left ? 'left: -5px' : null };\r\n  \r\n`;","import React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport {IconTogglerStyled, NavbarStyled} from \"./NavbarStyled\";\r\nimport {useGlobals} from \"../contexts/global\";\r\n\r\ninterface IconTogglerProps {\r\n    icon: string;\r\n    left?: boolean;\r\n    right?: boolean;\r\n}\r\n\r\n/**\r\n * @param props\r\n * @constructor\r\n */\r\nconst IconToggler: React.FC<IconTogglerProps> = (props) => {\r\n    return (\r\n        <IconTogglerStyled left={props.left} right={props.right}>{props.icon}</IconTogglerStyled>\r\n    )\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Navbar: React.FC = () => {\r\n    const [{theme}, dispatch] = useGlobals();\r\n\r\n    const changeTheme = () => {\r\n        dispatch({\r\n            type: \"changeTheme\",\r\n            changeTheme: theme === \"dark\" ? \"light\" : \"dark\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <NavbarStyled>\r\n            <Toggle\r\n                icons={{\r\n                    checked: <IconToggler left icon=\"🌞\"/>,\r\n                    unchecked: <IconToggler right icon=\"🌛\"/>,\r\n                }}\r\n                onChange={changeTheme}/>\r\n            <span>─</span>\r\n            <a href=\"https://github.com/jvidalv/react-ts-cups-generator\" target=\"_blank\" rel=\"noopener noreferrer\">>> Github</a>\r\n        </NavbarStyled>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n    background: string,\r\n    checked: boolean,\r\n    color: string,\r\n}\r\n\r\nexport const ButtonStyled = styled.div<ButtonProps>`\r\n   display: flex;\r\n   margin-bottom: 3px;\r\n   font-size: 1.1rem;\r\n   user-select: none;\r\n   & > div:first-child, > div:last-child{\r\n     width: 25px;\r\n     background: #4D4D4D;\r\n     position:relative;\r\n     transition: .50s;\r\n     &::after{\r\n        position: absolute;\r\n        width: 25px;\r\n        height: 25px;\r\n        text-align: center;\r\n        line-height: 32px;\r\n        opacity: 1;\r\n     }\r\n     &:not(.checked){\r\n      width: 0;\r\n      &::after{\r\n        content: \"\";\r\n        opacity: 0;\r\n      }\r\n     }\r\n   }\r\n   & > div:first-child {\r\n     &::after{\r\n        transition: .75s;\r\n        content: \"✔\";\r\n        color: greenyellow;\r\n     }\r\n   }\r\n   & > div:last-child {\r\n     &::after{\r\n        transition: 1.5s;\r\n        content: \"❌\";\r\n     }\r\n   }\r\n   }\r\n   & .button {\r\n    flex-grow: 1;\r\n    color: ${props => props.color};\r\n    background: ${props => props.background};\r\n    border-color: ${props => props.background};\r\n    padding: 5px 5px;\r\n    transition: .25s;\r\n    cursor : pointer;\r\n    text-align: left;\r\n   }\r\n   \r\n`;\r\n","import React from \"react\";\r\nimport {ButtonStyled} from \"./ButtonStyled\";\r\nimport {useGlobals} from \"../contexts/global\";\r\n\r\ninterface ButtonProps {\r\n    text: string,\r\n    background: string,\r\n    color: string,\r\n    type: string,\r\n}\r\n\r\n/**\r\n * Very nice if if if function to set the right type of energy\r\n * Not very proud, buy hey, it works 🤷‍♂️\r\n * @param text\r\n * @param tipo\r\n * @param checked\r\n */\r\nfunction calculateTipo(text : string, tipo: string, checked: boolean): string {\r\n   if(!checked){\r\n       if(tipo === \"any\"){\r\n           return text === \"Electricidad\" ? \"gas\" : \"electricidad\";\r\n       }\r\n       if(tipo === \"electricidad\"){\r\n           return text === \"Electricidad\" ? \"none\" : \"gas\";\r\n       }\r\n       if(tipo === \"gas\"){\r\n           return text === \"Electricidad\" ? \"gas\" : \"none\";\r\n       }\r\n   } else {\r\n       if(tipo === \"none\"){\r\n           return text === \"Electricidad\" ? \"electricidad\" : \"gas\";\r\n       }\r\n       if(tipo === \"electricidad\"){\r\n           return text === \"Gas\" ? \"any\" : \"electricidad\";\r\n       }\r\n       if(tipo === \"gas\"){\r\n           return text === \"Electricidad\" ? \"any\" : \"gas\";\r\n       }\r\n   }\r\n   return \"any\";\r\n}\r\n\r\n/**\r\n * @param text\r\n * @param background\r\n * @param color\r\n * @param type\r\n * @constructor\r\n */\r\nconst Button: React.FC<ButtonProps> = ({text, background, color, type}) => {\r\n    const [{ccups}, dispatch] = useGlobals();\r\n    const [checked, setChecked] = React.useState(true);\r\n    const changeChecked = () => {\r\n        switch (type) {\r\n            case 'tipo':\r\n                dispatch({\r\n                    type: \"changeCCUPS\",\r\n                    changeCCUPS: {...ccups, tipo : calculateTipo(text, ccups.tipo, !checked) }\r\n                });\r\n                break;\r\n            case 'distribuidora':\r\n                break;\r\n            case 'otros':\r\n                break;\r\n        }\r\n        setChecked(!checked);\r\n    };\r\n\r\n    return (\r\n        <ButtonStyled background={background} color={color} checked={checked} onClick={() => changeChecked()}>\r\n            <div className={checked ? \"checked\" : \" \"}/>\r\n            <div className=\"button\">\r\n                {text}\r\n            </div>\r\n            <div className={checked ? \" \" : \"checked\"}/>\r\n        </ButtonStyled>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\nimport THEME from \"../constants/themes\";\r\n\r\n// theme is now fully typed\r\nexport const ButtonTitleStyled = styled.h4`\r\n    color: ${props => THEME[props.theme.type].onBackground};\r\n    margin: 10px 0;\r\n    & span {\r\n      margin-right: 5px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {ButtonTitleStyled} from \"./ButtonTitleStyled\";\r\n\r\ninterface ButtonTitleProps {\r\n    text : string,\r\n    icon : string,\r\n}\r\n\r\nconst ButtonTitle: React.FC<ButtonTitleProps> = ({text, icon}) => {\r\n    return (\r\n        <ButtonTitleStyled>\r\n            <span>{icon}</span>\r\n            {text}\r\n        </ButtonTitleStyled>\r\n    );\r\n};\r\n\r\nexport default ButtonTitle;","import styled from 'styled-components';\r\n\r\ninterface ToolProps {\r\n    background : string,\r\n}\r\n\r\nexport const ToolStyled = styled.div<ToolProps>`\r\n    background: ${props => props.background};\r\n    height: 35px;\r\n    width: 35px;\r\n    font-size: 17px;\r\n    text-align: center;\r\n    line-height: 35px;\r\n    overflow:hidden;\r\n    transition: .25s;\r\n    cursor:pointer;\r\n    user-select: none;\r\n    color : white;\r\n    &:not(:last-child){\r\n      margin-right: 3px;\r\n    }\r\n    &.hovered{\r\n      width: 80px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {ToolStyled} from \"./ToolStyled\";\r\n\r\ninterface ToolProps {\r\n    icon: string,\r\n    text: string,\r\n    background: string,\r\n}\r\n\r\nconst Tool: React.FC<ToolProps> = ({icon, text, background}) => {\r\n\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    return (\r\n        <ToolStyled className={hover ? \"hovered\" : \"non-hovered\"} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} background={background}>\r\n            { hover ? text : icon}\r\n        </ToolStyled>\r\n    );\r\n};\r\n\r\nexport default Tool;","import React from 'react';\r\nimport {useGlobals} from \"../contexts/global\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {ContainerStyled, ContentStyled} from \"../styles/GenericsStyled\";\r\nimport Navbar from \"../layouts/Navbar\";\r\nimport Button from \"../components/Button\";\r\nimport ButtonTitle from \"../components/ButtonTitle\";\r\nimport Tool from \"../components/Tool\";\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst Main: React.FC = () => {\r\n    const [{theme}] = useGlobals();\r\n    return (\r\n        <ThemeProvider theme={{type: theme}}>\r\n            <ContainerStyled>\r\n                <ContentStyled>\r\n                    <Navbar/>\r\n                    <h1>\r\n                        Código Universal del Punto de Suministro\r\n                    </h1>\r\n                    <div className=\"input\">\r\n                        <div>\r\n                            <div className=\"tools\">\r\n                                <Tool icon=\"👥\" text=\"COPIAR\" background=\"orange\"/>\r\n                                <Tool icon=\"♻\" text=\"GENERAR\" background=\"chocolate\"/>\r\n                            </div>\r\n                            <input readOnly={true} value=\"ES0318363477145938GE\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Tipo\" icon=\"⚡\"/>\r\n                            <Button type=\"tipo\" text=\"Electricidad\" background=\"yellow\" color=\"black\"/>\r\n                            <Button type=\"tipo\" text=\"Gas\" background=\"purple\" color=\"white\"/>\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Distribuidora\" icon=\"🏭\"/>\r\n                            <Button type=\"distribuidora\" text=\"Endesa\" background=\"cadetblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Iberdrola\" background=\"cornflowerblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"Naturgy\" background=\"darkslateblue\" color=\"white\"/>\r\n                            <Button type=\"distribuidora\" text=\"E-Redes\" background=\"mediumslateblue\" color=\"white\"/>\r\n                        </div>\r\n                        <div className=\"tipo-subministro\">\r\n                            <ButtonTitle text=\"Otros\" icon=\"🌴\"/>\r\n                            <Button type=\"otros\" text=\"Canario\" background=\"aqua\" color=\"black\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <p>\r\n                            El número CUPS es el <strong>código alfanumérico que identifica cada casa o\r\n                            negocio</strong>, tanto para la red de electricidad como de la red de gas natural.\r\n                        </p>\r\n                    </div>\r\n                </ContentStyled>\r\n            </ContainerStyled>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {initialState, reducer, StateProvider} from \"../contexts/global\";\r\nimport Main from \"./Main\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <StateProvider initialState={initialState} reducer={reducer}>\r\n            <Main/>\r\n        </StateProvider>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport \"./styles/#generic.css\";\nimport \"./styles/rt.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}